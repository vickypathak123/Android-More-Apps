// Generated by view binder compiler. Do not edit!
package com.example.app.appcenter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.app.appcenter.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMoreAppsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LayoutNoInternetBinding layoutNoInternet;

  @NonNull
  public final LayoutProgressBinding layoutProgress;

  @NonNull
  public final LayoutWentWrongBinding layoutWentWrong;

  @NonNull
  public final AppBarLayout maAblHeader;

  @NonNull
  public final ConstraintLayout maClHeader;

  @NonNull
  public final ImageView maIvBack;

  @NonNull
  public final ImageView maIvShare;

  @NonNull
  public final TabLayout maTabs;

  @NonNull
  public final TextView maTvTitle;

  @NonNull
  public final ViewPager maViewpager;

  @NonNull
  public final ConstraintLayout mainAppsContainer;

  @NonNull
  public final TextView tvNoPackage;

  private ActivityMoreAppsBinding(@NonNull ConstraintLayout rootView,
      @NonNull LayoutNoInternetBinding layoutNoInternet,
      @NonNull LayoutProgressBinding layoutProgress,
      @NonNull LayoutWentWrongBinding layoutWentWrong, @NonNull AppBarLayout maAblHeader,
      @NonNull ConstraintLayout maClHeader, @NonNull ImageView maIvBack,
      @NonNull ImageView maIvShare, @NonNull TabLayout maTabs, @NonNull TextView maTvTitle,
      @NonNull ViewPager maViewpager, @NonNull ConstraintLayout mainAppsContainer,
      @NonNull TextView tvNoPackage) {
    this.rootView = rootView;
    this.layoutNoInternet = layoutNoInternet;
    this.layoutProgress = layoutProgress;
    this.layoutWentWrong = layoutWentWrong;
    this.maAblHeader = maAblHeader;
    this.maClHeader = maClHeader;
    this.maIvBack = maIvBack;
    this.maIvShare = maIvShare;
    this.maTabs = maTabs;
    this.maTvTitle = maTvTitle;
    this.maViewpager = maViewpager;
    this.mainAppsContainer = mainAppsContainer;
    this.tvNoPackage = tvNoPackage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMoreAppsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMoreAppsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_more_apps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMoreAppsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_no_internet;
      View layoutNoInternet = ViewBindings.findChildViewById(rootView, id);
      if (layoutNoInternet == null) {
        break missingId;
      }
      LayoutNoInternetBinding binding_layoutNoInternet = LayoutNoInternetBinding.bind(layoutNoInternet);

      id = R.id.layout_progress;
      View layoutProgress = ViewBindings.findChildViewById(rootView, id);
      if (layoutProgress == null) {
        break missingId;
      }
      LayoutProgressBinding binding_layoutProgress = LayoutProgressBinding.bind(layoutProgress);

      id = R.id.layout_went_wrong;
      View layoutWentWrong = ViewBindings.findChildViewById(rootView, id);
      if (layoutWentWrong == null) {
        break missingId;
      }
      LayoutWentWrongBinding binding_layoutWentWrong = LayoutWentWrongBinding.bind(layoutWentWrong);

      id = R.id.ma_abl_header;
      AppBarLayout maAblHeader = ViewBindings.findChildViewById(rootView, id);
      if (maAblHeader == null) {
        break missingId;
      }

      id = R.id.ma_cl_header;
      ConstraintLayout maClHeader = ViewBindings.findChildViewById(rootView, id);
      if (maClHeader == null) {
        break missingId;
      }

      id = R.id.ma_iv_back;
      ImageView maIvBack = ViewBindings.findChildViewById(rootView, id);
      if (maIvBack == null) {
        break missingId;
      }

      id = R.id.ma_iv_share;
      ImageView maIvShare = ViewBindings.findChildViewById(rootView, id);
      if (maIvShare == null) {
        break missingId;
      }

      id = R.id.ma_tabs;
      TabLayout maTabs = ViewBindings.findChildViewById(rootView, id);
      if (maTabs == null) {
        break missingId;
      }

      id = R.id.ma_tv_title;
      TextView maTvTitle = ViewBindings.findChildViewById(rootView, id);
      if (maTvTitle == null) {
        break missingId;
      }

      id = R.id.ma_viewpager;
      ViewPager maViewpager = ViewBindings.findChildViewById(rootView, id);
      if (maViewpager == null) {
        break missingId;
      }

      id = R.id.main_apps_container;
      ConstraintLayout mainAppsContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainAppsContainer == null) {
        break missingId;
      }

      id = R.id.tv_no_package;
      TextView tvNoPackage = ViewBindings.findChildViewById(rootView, id);
      if (tvNoPackage == null) {
        break missingId;
      }

      return new ActivityMoreAppsBinding((ConstraintLayout) rootView, binding_layoutNoInternet,
          binding_layoutProgress, binding_layoutWentWrong, maAblHeader, maClHeader, maIvBack,
          maIvShare, maTabs, maTvTitle, maViewpager, mainAppsContainer, tvNoPackage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
