// Generated by view binder compiler. Do not edit!
package com.example.app.appcenter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.app.appcenter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutWentWrongBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView ivWentWrong;

  @NonNull
  public final ConstraintLayout layoutWentWrong;

  @NonNull
  public final TextView tvWentWrong;

  @NonNull
  public final TextView tvWentWrongRetry;

  private LayoutWentWrongBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView ivWentWrong, @NonNull ConstraintLayout layoutWentWrong,
      @NonNull TextView tvWentWrong, @NonNull TextView tvWentWrongRetry) {
    this.rootView = rootView;
    this.ivWentWrong = ivWentWrong;
    this.layoutWentWrong = layoutWentWrong;
    this.tvWentWrong = tvWentWrong;
    this.tvWentWrongRetry = tvWentWrongRetry;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutWentWrongBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutWentWrongBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_went_wrong, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutWentWrongBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_went_wrong;
      AppCompatImageView ivWentWrong = ViewBindings.findChildViewById(rootView, id);
      if (ivWentWrong == null) {
        break missingId;
      }

      ConstraintLayout layoutWentWrong = (ConstraintLayout) rootView;

      id = R.id.tv_went_wrong;
      TextView tvWentWrong = ViewBindings.findChildViewById(rootView, id);
      if (tvWentWrong == null) {
        break missingId;
      }

      id = R.id.tv_went_wrong_retry;
      TextView tvWentWrongRetry = ViewBindings.findChildViewById(rootView, id);
      if (tvWentWrongRetry == null) {
        break missingId;
      }

      return new LayoutWentWrongBinding((ConstraintLayout) rootView, ivWentWrong, layoutWentWrong,
          tvWentWrong, tvWentWrongRetry);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
